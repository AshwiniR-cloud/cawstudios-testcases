URL>> https://reqres.in/api/users?id=2

JSON Body Response
-------------------
{
    "data": {
        "id": 2,
        "email": "janet.weaver@reqres.in",
        "first_name": "Janet",
        "last_name": "Weaver",
        "avatar": "https://reqres.in/img/faces/2-image.jpg"
    },
    "support": {
        "url": "https://reqres.in/#support-heading",
        "text": "To keep ReqRes free, contributions towards server costs are appreciated!"
    }
}


Schema Validation Test Cases
----------------------------
Positive Test Cases
*******************
var schema = {
    "$schema": "http://json-schema.org/draft-06/schema",
    "$id": "http://example.com/example.json",
    "type": "object",
    "required": [
        "data",
        "support"
    ],
    "properties": {
        "data": {
            "$id": "#/properties/data",
            "type": "object",
            "required": [
                "id",
                "email",
                "first_name",
                "last_name",
                "avatar"
            ],
            "properties": {
                "id": {
                    "$id": "#/properties/data/properties/id",
                    "type": "number"
                },
                "email": {
                    "$id": "#/properties/data/properties/email",
                    "type": "string"
                },
                "first_name": {
                    "$id": "#/properties/data/properties/first_name",
                    "type": "string"
                },
                "last_name": {
                    "$id": "#/properties/data/properties/last_name",
                    "type": "string"
                },
                "avatar": {
                    "$id": "#/properties/data/properties/avatar",
                    "type": "string"
                }
            }
        },
        "support": {
            "$id": "#/properties/support",
            "type": "object",
            "required": [
                "url",
                "text"
            ],
            "properties": {
                "url": {
                    "$id": "#/properties/support/properties/url",
                    "type": "string"
                },
                "text": {
                    "$id": "#/properties/support/properties/text",
                    "type": "string"
                }
            }
        }
    }
}
var data1schema = {
    "$schema": "http://json-schema.org/draft-06/schema",
    "$id": "http://example.com/example.json",
    "type": "object",
    "required": [
        "id",
        "email",
        "first_name",
        "last_name",
        "avatar"
    ],
    "properties": {
        "id": {
            "$id": "#/properties/id",
            "type": "number"
        },
        "email": {
            "$id": "#/properties/email",
            "type": "string"
        },
        "first_name": {
            "$id": "#/properties/first_name",
            "type": "string"
        },
        "last_name": {
            "$id": "#/properties/last_name",
            "type": "string"
        },
        "avatar": {
            "$id": "#/properties/avatar",
            "type": "string"
        }
    }
}

var main_data=pm.response.json()
var data1=main_data.data

pm.test('Schema is valid', function () {
    pm.expect(tv4.validate(main_data, schema)).to.be.true;
});
pm.test("Data Schema is valid", function() {
    pm.expect(tv4.validate(data1, data1schema)).to.be.true
})



Nagative Test Cases
*******************
var support_schema={
    "$schema": "http://json-schema.org/draft-06/schema",
    "$id": "http://example.com/example.json",
    "type": "object",
    "required": [
        "url",
        "text"
    ],
    "properties": {
        "url": {
            "$id": "#/properties/url",
            "type": "string"
        },
        "text": {
            "$id": "#/properties/text",
            "type": "number"
        }
    }
}
var main_data=pm.response.json()
var support_data=main_data.support

pm.test('Support Schema nagative validation', function()
{
    pm.expect(tv4.validate(support_data, support_schema).to.be.true)
})